user  nginx;           #    an unprivileged user, so an attacker cannot do much if the container is compromised
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    server {
        listen 80;                                      # on configure le port to LISTEN on
         
        location = /status {  #a. health probe. This helps container orchestrators like Kubernetes and Docker                        access_log off;     > #b. swarm to make scheduling decisions based on the health of our NGINX server
             default_type text/plain;
             add_header Content-Type text/plain;
             return 200 "alive"; 
        }
        
         location / {    #  We define all traffic / that hits our server,   !!!
            gzip off;
            root /usr/share/nginx/html/;
            index  index.html;
        }
        
        location ~* \.(js|jpg|png|css)$ {
            root /usr/share/nginx/html/;
        }
    } 
    sendfile        on;
    keepalive_timeout  65;
}